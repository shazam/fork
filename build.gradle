/*
 * Copyright 2015 Shazam Entertainment Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

task wrapper(type: Wrapper) {
    gradleVersion = '4.0-rc-1'
}

ext.sourceCompatibility = JavaVersion.VERSION_1_8
ext.targetCompatibility = JavaVersion.VERSION_1_8

def repos = {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://maven.google.com'
    }
}

allprojects {
    buildscript {
        repositories repos
    }
    repositories repos

    apply plugin: "java"
    apply plugin: "jacoco"

    version = VERSION_NAME
    group = GROUP
}

subprojects {
    afterEvaluate { project ->
        jacocoTestReport.dependsOn test
        jacocoTestReport.reports.html.enabled false
        jacocoTestReport.reports.xml.enabled true

        // Weirdly archives are signed even if signing.required {false}, so also skipping task explicitly.
        signArchives.onlyIf {!VERSION_NAME.endsWith("SNAPSHOT")}
    }
}

task jacocoMergeExecutions(type: JacocoMerge, dependsOn: getTasksByName('jacocoTestReport', true)) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
}

task jacocoMergedReport(type: JacocoReport, dependsOn: jacocoMergeExecutions) {
    executionData jacocoMergeExecutions.destinationFile
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories =  files(subprojects.sourceSets.main.output)
    reports {
        html.enabled false
        xml.enabled true
    }
}
